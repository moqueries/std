// Code generated by Moqueries - https://moqueries.org - DO NOT EDIT!

package crypto

import (
	"crypto"

	"moqueries.org/runtime/moq"
)

// The following type assertion assures that crypto.PublicKey is mocked
// completely
var _ crypto.PublicKey = (*MoqPublicKey_mock)(nil)

// MoqPublicKey holds the state of a moq of the PublicKey type
type MoqPublicKey struct {
	Scene  *moq.Scene
	Config moq.Config
	Moq    *MoqPublicKey_mock

	Runtime struct {
		ParameterIndexing struct{}
	}
}

// MoqPublicKey_mock isolates the mock interface of the PublicKey type
type MoqPublicKey_mock struct {
	Moq *MoqPublicKey
}

// MoqPublicKey_recorder isolates the recorder interface of the PublicKey type
type MoqPublicKey_recorder struct {
	Moq *MoqPublicKey
}

// NewMoqPublicKey creates a new moq of the PublicKey type
func NewMoqPublicKey(scene *moq.Scene, config *moq.Config) *MoqPublicKey {
	if config == nil {
		config = &moq.Config{}
	}
	m := &MoqPublicKey{
		Scene:  scene,
		Config: *config,
		Moq:    &MoqPublicKey_mock{},

		Runtime: struct {
			ParameterIndexing struct{}
		}{ParameterIndexing: struct{}{}},
	}
	m.Moq.Moq = m

	scene.AddMoq(m)
	return m
}

// Mock returns the mock implementation of the PublicKey type
func (m *MoqPublicKey) Mock() *MoqPublicKey_mock { return m.Moq }

// OnCall returns the recorder implementation of the PublicKey type
func (m *MoqPublicKey) OnCall() *MoqPublicKey_recorder {
	return &MoqPublicKey_recorder{
		Moq: m,
	}
}

// Reset resets the state of the moq
func (m *MoqPublicKey) Reset() {}

// AssertExpectationsMet asserts that all expectations have been met
func (m *MoqPublicKey) AssertExpectationsMet() { m.Scene.T.Helper() }
