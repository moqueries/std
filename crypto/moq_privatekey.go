// Code generated by Moqueries - https://moqueries.org - DO NOT EDIT!

package crypto

import (
	"crypto"

	"moqueries.org/runtime/moq"
)

// The following type assertion assures that crypto.PrivateKey is mocked
// completely
var _ crypto.PrivateKey = (*MoqPrivateKey_mock)(nil)

// MoqPrivateKey holds the state of a moq of the PrivateKey type
type MoqPrivateKey struct {
	Scene  *moq.Scene
	Config moq.Config
	Moq    *MoqPrivateKey_mock

	Runtime struct {
		ParameterIndexing struct{}
	}
}

// MoqPrivateKey_mock isolates the mock interface of the PrivateKey type
type MoqPrivateKey_mock struct {
	Moq *MoqPrivateKey
}

// MoqPrivateKey_recorder isolates the recorder interface of the PrivateKey
// type
type MoqPrivateKey_recorder struct {
	Moq *MoqPrivateKey
}

// NewMoqPrivateKey creates a new moq of the PrivateKey type
func NewMoqPrivateKey(scene *moq.Scene, config *moq.Config) *MoqPrivateKey {
	if config == nil {
		config = &moq.Config{}
	}
	m := &MoqPrivateKey{
		Scene:  scene,
		Config: *config,
		Moq:    &MoqPrivateKey_mock{},

		Runtime: struct {
			ParameterIndexing struct{}
		}{ParameterIndexing: struct{}{}},
	}
	m.Moq.Moq = m

	scene.AddMoq(m)
	return m
}

// Mock returns the mock implementation of the PrivateKey type
func (m *MoqPrivateKey) Mock() *MoqPrivateKey_mock { return m.Moq }

// OnCall returns the recorder implementation of the PrivateKey type
func (m *MoqPrivateKey) OnCall() *MoqPrivateKey_recorder {
	return &MoqPrivateKey_recorder{
		Moq: m,
	}
}

// Reset resets the state of the moq
func (m *MoqPrivateKey) Reset() {}

// AssertExpectationsMet asserts that all expectations have been met
func (m *MoqPrivateKey) AssertExpectationsMet() { m.Scene.T.Helper() }
