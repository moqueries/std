// Code generated by Moqueries - https://moqueries.org - DO NOT EDIT!

package xml

import (
	"encoding/xml"

	"moqueries.org/runtime/moq"
)

// The following type assertion assures that xml.Token is mocked completely
var _ xml.Token = (*MoqToken_mock)(nil)

// MoqToken holds the state of a moq of the Token type
type MoqToken struct {
	Scene  *moq.Scene
	Config moq.Config
	Moq    *MoqToken_mock

	Runtime struct {
		ParameterIndexing struct{}
	}
}

// MoqToken_mock isolates the mock interface of the Token type
type MoqToken_mock struct {
	Moq *MoqToken
}

// MoqToken_recorder isolates the recorder interface of the Token type
type MoqToken_recorder struct {
	Moq *MoqToken
}

// NewMoqToken creates a new moq of the Token type
func NewMoqToken(scene *moq.Scene, config *moq.Config) *MoqToken {
	if config == nil {
		config = &moq.Config{}
	}
	m := &MoqToken{
		Scene:  scene,
		Config: *config,
		Moq:    &MoqToken_mock{},

		Runtime: struct {
			ParameterIndexing struct{}
		}{ParameterIndexing: struct{}{}},
	}
	m.Moq.Moq = m

	scene.AddMoq(m)
	return m
}

// Mock returns the mock implementation of the Token type
func (m *MoqToken) Mock() *MoqToken_mock { return m.Moq }

// OnCall returns the recorder implementation of the Token type
func (m *MoqToken) OnCall() *MoqToken_recorder {
	return &MoqToken_recorder{
		Moq: m,
	}
}

// Reset resets the state of the moq
func (m *MoqToken) Reset() {}

// AssertExpectationsMet asserts that all expectations have been met
func (m *MoqToken) AssertExpectationsMet() { m.Scene.T.Helper() }
